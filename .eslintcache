[{"/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/index.js":"1","/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/App.js":"2","/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/components/ShowAppt.js":"3","/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/containers/ApptList.js":"4","/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/containers/ApptContainer.js":"5"},{"size":152,"mtime":1608761305486,"results":"6","hashOfConfig":"7"},{"size":2094,"mtime":1608770019416,"results":"8","hashOfConfig":"7"},{"size":1530,"mtime":1608769690095,"results":"9","hashOfConfig":"7"},{"size":1281,"mtime":1608770062753,"results":"10","hashOfConfig":"7"},{"size":679,"mtime":1608769327589,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"jlmb83",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/index.js",[],["25","26"],"/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/App.js",["27"],"/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/components/ShowAppt.js",["28","29"],"import react from 'react';\n\nimport './ShowAppt.css';\n\nfunction ShowAppt(props) {\n  const getKeyword = () => {\n    if (props.appt.task === \"Call\") {\n      return \"call\";\n    } else {\n      return \"reach out to\";\n    }\n  }\n\n  const getIcon = () => {\n    switch(props.appt.task) {\n      case \"Call\":\n        return <i className=\"fas fa-phone-alt\"></i>;\n      case \"Manual task\":\n        return <i className=\"fab fa-linkedin\"></i>;\n      case \"LinkedIn message\":\n        return <i className=\"fab fa-linkedin\"></i>;\n    }\n  }\n\n  return (\n    <div className={\"apptShow \" + (props.open ? \"openAppt\" : \"\")} style={props.style} onClick={props.toggleOpen}>\n      <div className=\"icon\">\n        {getIcon()}\n      </div>\n      {!props.open && \n        <div className=\"touchDetail\">\n          <h3>Touch {props.appt.touchpoint} | {props.appt.notes}</h3>\n          <h4>{props.appt.task} {props.appt.task === \"Manual task\" && <span className=\"taskJoiner\">with</span>} {props.appt.client}</h4>\n        </div>\n      }\n      {props.open && \n        <div className=\"touchQuestion\">\n          <h4>Did you {getKeyword()} {props.appt.client}?</h4>\n        </div>\n      }\n      <div className=\"respBtns\">\n        <div className=\"deny\"><i className=\"fas fa-times\"></i></div>\n        <div className=\"confirm\" id={props.id} onClick={props.handleDismiss}><i className=\"fas fa-check\" id={props.id}></i></div>\n      </div>\n      <div className=\"pushOver\">\n        <i className=\"fas fa-chevron-right\"></i>\n      </div>\n    </div>\n  )\n}\n\nexport default ShowAppt;","/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/containers/ApptList.js",["30"],"/Users/imac2/Documents/Programming/postGAtesting/striveCodeChallenge/strive-app/src/containers/ApptContainer.js",["31","32"],"import react, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport ShowAppt from '../components/ShowAppt';\n\nfunction ApptContainer(props) {\n  const [open, setOpen] = useState(false);\n\n  const toggleOpen = () => {\n    if (open) {\n      setOpen(false)\n    } else {\n      setOpen(true)\n    }\n  }\n\n  return (\n      <div className=\"apptContainer\">\n        <div className=\"closeDrawer\" onClick={toggleOpen}><i className=\"fas fa-chevron-left\"></i></div>\n        <ShowAppt appt={props.appt} id={props.id} style={props.style} open={open} toggleOpen={toggleOpen} handleDismiss={props.handleDismiss} />\n      </div>\n  )\n}\n\nexport default ApptContainer;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":15,"column":5,"nodeType":"43","messageId":"44","endLine":22,"endColumn":6},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":13},{"ruleId":"37","severity":1,"message":"45","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":23},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'CSSTransition' is defined but never used.","no-global-assign","no-unsafe-negation"]